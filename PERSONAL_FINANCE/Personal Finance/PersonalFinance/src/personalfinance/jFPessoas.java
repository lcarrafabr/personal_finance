package personalfinance;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import personalfinance.classes.ClassConecta;
import personalfinance.classes.ColorRenderer;
import personalfinance.classes.Enderecos;
import personalfinance.classes.Funcoes;
import personalfinance.classes.Historicos;
import personalfinance.classes.Pessoas;
import personalfinance.classes.Telefones;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFPessoas.java
 *
 * Created on 19/06/2014, 00:13:25
 */

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFPessoas extends javax.swing.JDialog {

    /** Creates new form jFPessoas */
    public jFPessoas() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jToolBar2 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        historicojButton = new javax.swing.JButton();
        usuariojButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradePessoasjTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cadastrarTelefonejButton = new javax.swing.JButton();
        atualizaTelefonejButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        identificadorjSpinner = new javax.swing.JSpinner();
        pessoajTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        data_cadastrojFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        statusjComboBox = new javax.swing.JComboBox();
        tipoPessoajComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeTelefonejTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        cadastroEnderecojButton = new javax.swing.JButton();
        atualizaEnderecojButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        gradeEnderecosjTable = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        pessoasObservacaojTextArea = new javax.swing.JTextArea();

        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(personalfinance.PersonalFinanceApp.class).getContext().getResourceMap(jFPessoas.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar2.setBackground(resourceMap.getColor("jToolBar2.background")); // NOI18N
        jToolBar2.setRollover(true);
        jToolBar2.setBorderPainted(false);
        jToolBar2.setName("jToolBar2"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar2.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar2.add(jSeparator2);

        historicojButton.setBackground(resourceMap.getColor("historicojButton.background")); // NOI18N
        historicojButton.setIcon(resourceMap.getIcon("historicojButton.icon")); // NOI18N
        historicojButton.setText(resourceMap.getString("historicojButton.text")); // NOI18N
        historicojButton.setFocusable(false);
        historicojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        historicojButton.setName("historicojButton"); // NOI18N
        historicojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        historicojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historicojButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(historicojButton);

        usuariojButton.setBackground(resourceMap.getColor("usuariojButton.background")); // NOI18N
        usuariojButton.setIcon(resourceMap.getIcon("usuariojButton.icon")); // NOI18N
        usuariojButton.setText(resourceMap.getString("usuariojButton.text")); // NOI18N
        usuariojButton.setFocusable(false);
        usuariojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuariojButton.setName("usuariojButton"); // NOI18N
        usuariojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuariojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariojButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(usuariojButton);

        jSeparator3.setName("jSeparator3"); // NOI18N
        jToolBar2.add(jSeparator3);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(sairjButton);

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        gradePessoasjTable.setBackground(resourceMap.getColor("gradePessoasjTable.background")); // NOI18N
        gradePessoasjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#ID", "Pessoa", "Tipo pessoa", "Data cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradePessoasjTable.setGridColor(resourceMap.getColor("gradePessoasjTable.gridColor")); // NOI18N
        gradePessoasjTable.setName("gradePessoasjTable"); // NOI18N
        gradePessoasjTable.setSelectionForeground(resourceMap.getColor("gradePessoasjTable.selectionForeground")); // NOI18N
        gradePessoasjTable.getTableHeader().setReorderingAllowed(false);
        gradePessoasjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradePessoasjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradePessoasjTable);
        gradePessoasjTable.getColumnModel().getColumn(0).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoasjTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradePessoasjTable.columnModel.title0")); // NOI18N
        gradePessoasjTable.getColumnModel().getColumn(1).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        gradePessoasjTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradePessoasjTable.columnModel.title1")); // NOI18N
        gradePessoasjTable.getColumnModel().getColumn(2).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradePessoasjTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradePessoasjTable.columnModel.title2")); // NOI18N
        gradePessoasjTable.getColumnModel().getColumn(3).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        gradePessoasjTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("gradePessoasjTable.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(resourceMap.getColor("jPanel4.background")); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jPanel5.setBackground(resourceMap.getColor("jPanel5.background")); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        cadastrarTelefonejButton.setIcon(resourceMap.getIcon("cadastrarTelefonejButton.icon")); // NOI18N
        cadastrarTelefonejButton.setText(resourceMap.getString("cadastrarTelefonejButton.text")); // NOI18N
        cadastrarTelefonejButton.setToolTipText(resourceMap.getString("cadastrarTelefonejButton.toolTipText")); // NOI18N
        cadastrarTelefonejButton.setContentAreaFilled(false);
        cadastrarTelefonejButton.setName("cadastrarTelefonejButton"); // NOI18N
        cadastrarTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarTelefonejButtonActionPerformed(evt);
            }
        });

        atualizaTelefonejButton.setIcon(resourceMap.getIcon("atualizaTelefonejButton.icon")); // NOI18N
        atualizaTelefonejButton.setText(resourceMap.getString("atualizaTelefonejButton.text")); // NOI18N
        atualizaTelefonejButton.setContentAreaFilled(false);
        atualizaTelefonejButton.setName("atualizaTelefonejButton"); // NOI18N
        atualizaTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaTelefonejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atualizaTelefonejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(cadastrarTelefonejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cadastrarTelefonejButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizaTelefonejButton)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setName("jPanel6"); // NOI18N

        jPanel7.setBackground(resourceMap.getColor("jPanel7.background")); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        identificadorjSpinner.setFocusable(false);
        identificadorjSpinner.setName("identificadorjSpinner"); // NOI18N
        identificadorjSpinner.setRequestFocusEnabled(false);

        pessoajTextField.setText(resourceMap.getString("pessoajTextField.text")); // NOI18N
        pessoajTextField.setName("pessoajTextField"); // NOI18N
        pessoajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pessoajTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setBackground(resourceMap.getColor("jLabel2.background")); // NOI18N
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        try {
            data_cadastrojFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        data_cadastrojFormattedTextField.setFocusable(false);
        data_cadastrojFormattedTextField.setName("data_cadastrojFormattedTextField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        statusjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ATIVO", "INATIVO" }));
        statusjComboBox.setName("statusjComboBox"); // NOI18N

        tipoPessoajComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NORMAL", "FORNECEDOR" }));
        tipoPessoajComboBox.setName("tipoPessoajComboBox"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(statusjComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(identificadorjSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(pessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(data_cadastrojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identificadorjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(data_cadastrojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(resourceMap.getColor("jPanel8.background")); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N

        jTabbedPane2.setBackground(resourceMap.getColor("jTabbedPane2.background")); // NOI18N
        jTabbedPane2.setName("jTabbedPane2"); // NOI18N

        jPanel9.setBackground(resourceMap.getColor("jPanel9.background")); // NOI18N
        jPanel9.setName("jPanel9"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        gradeTelefonejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo telefone", "Numero", "Ramal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeTelefonejTable.setName("gradeTelefonejTable"); // NOI18N
        gradeTelefonejTable.setSelectionForeground(resourceMap.getColor("gradeTelefonejTable.selectionForeground")); // NOI18N
        gradeTelefonejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(gradeTelefonejTable);
        gradeTelefonejTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        gradeTelefonejTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title0")); // NOI18N
        gradeTelefonejTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(160);
        gradeTelefonejTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title1")); // NOI18N
        gradeTelefonejTable.getColumnModel().getColumn(2).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title2")); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab(resourceMap.getString("jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBackground(resourceMap.getColor("jPanel11.background")); // NOI18N
        jPanel11.setName("jPanel11"); // NOI18N

        jPanel12.setBackground(resourceMap.getColor("jPanel12.background")); // NOI18N
        jPanel12.setName("jPanel12"); // NOI18N

        cadastroEnderecojButton.setIcon(resourceMap.getIcon("cadastroEnderecojButton.icon")); // NOI18N
        cadastroEnderecojButton.setText(resourceMap.getString("cadastroEnderecojButton.text")); // NOI18N
        cadastroEnderecojButton.setContentAreaFilled(false);
        cadastroEnderecojButton.setName("cadastroEnderecojButton"); // NOI18N
        cadastroEnderecojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroEnderecojButtonActionPerformed(evt);
            }
        });

        atualizaEnderecojButton.setIcon(resourceMap.getIcon("atualizaEnderecojButton.icon")); // NOI18N
        atualizaEnderecojButton.setText(resourceMap.getString("atualizaEnderecojButton.text")); // NOI18N
        atualizaEnderecojButton.setContentAreaFilled(false);
        atualizaEnderecojButton.setName("atualizaEnderecojButton"); // NOI18N
        atualizaEnderecojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaEnderecojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cadastroEnderecojButton, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(atualizaEnderecojButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadastroEnderecojButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizaEnderecojButton)
                .addContainerGap())
        );

        jPanel13.setBackground(resourceMap.getColor("jPanel13.background")); // NOI18N
        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setName("jPanel13"); // NOI18N

        jTabbedPane3.setName("jTabbedPane3"); // NOI18N

        jPanel14.setBackground(resourceMap.getColor("jPanel14.background")); // NOI18N
        jPanel14.setName("jPanel14"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        gradeEnderecosjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeEnderecosjTable.setName("gradeEnderecosjTable"); // NOI18N
        gradeEnderecosjTable.setSelectionForeground(resourceMap.getColor("gradeEnderecosjTable.selectionForeground")); // NOI18N
        gradeEnderecosjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(gradeEnderecosjTable);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeEnderecosjTable.columnModel.title0")); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab(resourceMap.getString("jPanel14.TabConstraints.tabTitle"), jPanel14); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel16.setName("jPanel16"); // NOI18N

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        pessoasObservacaojTextArea.setColumns(20);
        pessoasObservacaojTextArea.setRows(5);
        pessoasObservacaojTextArea.setName("pessoasObservacaojTextArea"); // NOI18N
        jScrollPane6.setViewportView(pessoasObservacaojTextArea);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(376, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel16.TabConstraints.tabTitle"), jPanel16); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    int codPessoa;
    int cod_acesso_usuario;
    String pessoas_usuario_logado;

    //************************************************************************************************************************

       public void getGradePessoa() throws ParseException{
       //Consultar pedidos
        Pessoas oPessoa = new Pessoas();

        if ( pessoajTextField.getText().length() > 0 ){
            oPessoa.setPessoa(pessoajTextField.getText()+"%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"#ID", "Pessoa", "Tipo pessoa", "Data cadastro"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradePessoasjTable.setModel(modeloTabela);
        gradePessoasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoasjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        gradePessoasjTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradePessoasjTable.getColumnModel().getColumn(3).setPreferredWidth(20);

        gradePessoasjTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA

try {
            resultSet = oPessoa.getConsultar();
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                //Formatar data
                Date cadastro = resultSet.getDate("DATA_CADASTRO");

                String dataCadastro = null;
                if (cadastro != null){
                SimpleDateFormat formatoDataLanc = new SimpleDateFormat("dd/MM/yyyy");
                dataCadastro = formatoDataLanc.format(cadastro);
                }else{
                dataCadastro = "";
                }
                //Fim formatação

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_PESSOA")),
                    resultSet.getString("PESSOA"),
                    resultSet.getString("TIPO_PESSOA"),
                    dataCadastro
                    
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

           }

       public void getFieldPessoas(int codPessoa) throws ParseException{

        Pessoas oPessoa = new Pessoas();
        ResultSet rs = null;
        oPessoa.setCod_pessoa(codPessoa);

        try {
            rs = oPessoa.getConsultar();
            rs.next();

            //Pegar campos
            identificadorjSpinner.setValue(rs.getInt("COD_PESSOA"));
            pessoajTextField.setText(rs.getString("PESSOA"));
            data_cadastrojFormattedTextField.setValue(Funcoes.getDataFormat(rs.getDate("DATA_CADASTRO")));
            statusjComboBox.setSelectedItem(rs.getString("STATUS"));
            tipoPessoajComboBox.setSelectedItem(rs.getString("TIPO_PESSOA"));
            pessoasObservacaojTextArea.setText(rs.getString("OBSERVACAO"));
        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }



    }

       public void getGrandeTelefone() throws ParseException{
       //Consultar Telefones
        Telefones oTelefone = new Telefones();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Tipo Telefone", "Numero", "Ramal"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTelefonejTable.setModel(modeloTabela);
//        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(160);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(50);

        gradeTelefonejTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA


try {
            oTelefone.setCod_pessoa(codPessoa);

            resultSet = oTelefone.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
//                    Funcoes.getCodigoFormat(resultSet.getInt("COD_TELEFONE")),
                    resultSet.getString("TIPO_TELEFONE"),
                    resultSet.getString("DDD")+"-"+resultSet.getString("NUMERO_TELEFONE"),
                    resultSet.getString("RAMAL"),
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }

       public void getGrandeEnderecos() throws ParseException{
       //Consultar Endereços
        Enderecos oEndereco = new Enderecos();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Endereço"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeEnderecosjTable.setModel(modeloTabela);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setPreferredWidth(480);

        gradeEnderecosjTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA


try {
            oEndereco.setCod_pessoa(codPessoa);

            resultSet = oEndereco.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Enderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    resultSet.getString("SIGLA_LOGRADOURO")
                    + " " + resultSet.getString("LOGRADOURO")
                    + ", " + resultSet.getString("NUMERO")
                    + ", " + resultSet.getString("BAIRRO")
                    + ", " + resultSet.getString("CIDADE")
                    + " - "+ resultSet.getString("ESTADO")
                    + " - "+ resultSet.getString("PAIS"),
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Enderecos.class.getName()).log(Level.SEVERE, null, ex);
        }

           }

//************************************************************************************************************************


    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        if (!novojButton.isEnabled()){
                Object[] options = {"Sim", "Não"};
                 int sd = JOptionPane.showOptionDialog(null, "Deseja realmente SAIR?\n As informações não salvas serão perdidas."
                        , "Confirmação do Sistema!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if (sd != 0) {
                    return;
                }

                this.dispose();

            }else{

                this.dispose();

            }
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        usuariojButton.setEnabled(false);
        pessoajTextField.grabFocus();
        cadastrarTelefonejButton.setEnabled(false);
        atualizaTelefonejButton.setEnabled(false);
        cadastroEnderecojButton.setEnabled(false);
        atualizaEnderecojButton.setEnabled(false);

        ClassConecta.conecta();

        try {
            data_cadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

        buscarjButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        pessoajTextField.grabFocus();

        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

        pessoajTextField.setText("");
        statusjComboBox.setSelectedItem("ATIVO");
        tipoPessoajComboBox.setSelectedItem("NORMAL");
        pessoasObservacaojTextArea.setText("");
        identificadorjSpinner.setValue(0);
        try {
            data_cadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Pessoas oPessoa = new Pessoas();

        if( pessoajTextField.getText().equals("")){

            JOptionPane.showMessageDialog(null, "O campo PESSOA é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            novojButtonActionPerformed(evt);
        }

        oPessoa.setPessoa(pessoajTextField.getText().trim().toUpperCase());
        try {
            oPessoa.setData_cadastro(Funcoes.getDataFormatBR(data_cadastrojFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        oPessoa.setStatus(statusjComboBox.getSelectedItem().toString());
        oPessoa.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
        oPessoa.setObservacao(pessoasObservacaojTextArea.getText());
        oPessoa.setCadastrar();

        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);


// *******************INCLUINDO DADOS NO HISTORICO*******************************************************
//                String data = "dd/MM/yyyy";
//                String hora = "h:mm - a";
//                String data1, hora1;
//
//                java.util.Date agora = new java.util.Date();;
//                SimpleDateFormat formata = new SimpleDateFormat(data);
//                data1 = formata.format(agora);
//                formata = new SimpleDateFormat(hora);
//                hora1 = formata.format(agora);
//
//                System.out.print(data1+" "+ hora1);
//
//                Historicos oHistorico = new Historicos();
//
//                oHistorico.setCod_pessoa(cod_acesso_usuario);
//                oHistorico.setHistorico("CADASTRO DA PESSOA TIPO "
//                        + tipoPessoajComboBox.getSelectedItem().toString()
//                        + " " + pessoajTextField.getText()
//                        + " CADASTRO EM "+ data1 + " " + hora1);
//                oHistorico.setPessoa(pessoas_usuario_logado);
//                oHistorico.setData(data1 +" "+ hora1);
//                oHistorico.setTipo_historico("CADASTRO NO SISTEMA");
//                oHistorico.setCadastrar();
//
//                ClassConecta.con.commit();
//                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
// *******************FIM DA INCLUSÃO DADOS NO HISTORICO*******************************************************
        try {
            getGradePessoa();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            getGradePessoa();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradePessoa();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        historicojButton.setEnabled(false);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void gradePessoasjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradePessoasjTableMouseClicked
        try {
            // TODO add your handling code here:
            editarjButton.setEnabled(true);
            codPessoa = Integer.parseInt(gradePessoasjTable.getValueAt(gradePessoasjTable.getSelectedRow(), 0).toString());

            getGrandeTelefone();
            getGrandeEnderecos();
            
            if (codPessoa == 0) {
                return;
            }
            try {
                getFieldPessoas(codPessoa);
            } catch (ParseException ex) {
                Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
            historicojButton.setEnabled(true);
            usuariojButton.setEnabled(true);
            cadastrarTelefonejButton.setEnabled(true);
            atualizaTelefonejButton.setEnabled(true);
            cadastroEnderecojButton.setEnabled(true);
            atualizaEnderecojButton.setEnabled(true);
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_gradePessoasjTableMouseClicked

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Pessoas oPessoa = new Pessoas();
        oPessoa.setCod_pessoa(codPessoa);


       oPessoa.setPessoa(pessoajTextField.getText().trim().toUpperCase());
        try {
            oPessoa.setData_cadastro(Funcoes.getDataFormatBR(data_cadastrojFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
       oPessoa.setStatus(statusjComboBox.getSelectedItem().toString());
       oPessoa.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
       oPessoa.setObservacao(pessoasObservacaojTextArea.getText());
       oPessoa.setAlterar(conecta);

       try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);

                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_acesso_usuario);
                oHistorico.setHistorico("ATUALIZAÇÃO DE DADOS CADASTRAIS DA PESSOA TIPO "
                        + tipoPessoajComboBox.getSelectedItem().toString() + " - "
                        + pessoajTextField.getText() + " as "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoas_usuario_logado);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("ATUALIZAÇÃO DE DADOS CADASTRAIS");
                oHistorico.setCadastrar();

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            getGradePessoa();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void pessoajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pessoajTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                Pessoas oPessoa = new Pessoas();
                oPessoa.setPessoa(pessoajTextField.getText());
                ResultSet rs = null;
                rs = oPessoa.getConsultar();
                getGradePessoa();
            } catch (ParseException ex) {
                Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }
                if(pessoajTextField.getText().equals("")){
            identificadorjSpinner.setValue(0);
            pessoajTextField.setText("");
            statusjComboBox.setSelectedItem("ATIVO");
            tipoPessoajComboBox.setSelectedItem("NORMAL");
            pessoasObservacaojTextArea.setText("");
            try {
                data_cadastrojFormattedTextField.setText(Funcoes.getNowBR());
            } catch (ParseException ex) {
                Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
        if(pessoajTextField.getText().equals("")){
            editarjButton.setEnabled(false);
            usuariojButton.setEnabled(false);
            historicojButton.setEnabled(false);
        }
    }//GEN-LAST:event_pessoajTextFieldKeyReleased

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        int codPessoaDelete = 0;
        codPessoaDelete = Integer.parseInt(gradePessoasjTable.getValueAt(gradePessoasjTable.getSelectedRow(), 0).toString());

        Pessoas oPessoa = new Pessoas();
        oPessoa.setCod_pessoa(codPessoaDelete);
        oPessoa.setExcluir(conecta);
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);

// *******************INCLUINDO DADOS NO HISTORICO*******************************************************

                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_acesso_usuario);
                oHistorico.setHistorico("EXCLUSÃO DE DADOS CADASTRAIS. "
                        + "\n informações excluídas:"
                        + "\n"+ "PESSOA: " + pessoajTextField.getText().trim().toUpperCase()
                        + "\n" + " STATUS " + statusjComboBox.getSelectedItem().toString()
                        + "\n" + "TIPO PESSOA: " + tipoPessoajComboBox.getSelectedItem().toString()
                        + "\n" + " EXCLUÍDO EM: "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoas_usuario_logado);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("EXCLUSÃO DE DADOS CADASTRAIS");
                oHistorico.setCadastrar();

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);

// *******************FIM DAINCLUSÃO DE DADOS NO HISTORICO*************************************************

        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        identificadorjSpinner.setValue(0);
        pessoajTextField.setText("");
        statusjComboBox.setSelectedItem("ATIVO");
        tipoPessoajComboBox.setSelectedItem("NORMAL");
        pessoasObservacaojTextArea.setText("");
            try {
                data_cadastrojFormattedTextField.setText(Funcoes.getNowBR());
            } catch (ParseException ex) {
                Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
        try {
            getGradePessoa();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void usuariojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariojButtonActionPerformed
        // TODO add your handling code here:
        jFUsuarios oFormusuario = new jFUsuarios();
        oFormusuario.conecta = conecta;
        oFormusuario.cod_pessoa_usuario = codPessoa;
        oFormusuario.setTitle("Cadastro usuário");
        oFormusuario.pack();
        oFormusuario.setLocationRelativeTo(null);
        oFormusuario.setModal(true);
        oFormusuario.setVisible(true);
    }//GEN-LAST:event_usuariojButtonActionPerformed

    private void cadastrarTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarTelefonejButtonActionPerformed
        // TODO add your handling code here:
        jFTelefones oFormTelefone = new jFTelefones();
        oFormTelefone.conecta = conecta;
        System.out.println(codPessoa);
        oFormTelefone.cod_Pessoa_Telefone = codPessoa;
        oFormTelefone.cod_codUsuarioLogado_telefone = cod_acesso_usuario;
        oFormTelefone.pessoa_usuarioLogado_telefone = pessoas_usuario_logado;
        oFormTelefone.setTitle("Cadastro Telefones");
        oFormTelefone.pack();
        oFormTelefone.setLocationRelativeTo(null);
        oFormTelefone.setModal(true);
        oFormTelefone.setVisible(true);
        try {
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cadastrarTelefonejButtonActionPerformed

    private void atualizaTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaTelefonejButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaTelefonejButtonActionPerformed

    private void historicojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historicojButtonActionPerformed
        // TODO add your handling code here:
        jFHistoricos oFormHistorico = new jFHistoricos();

        oFormHistorico.setDefaultCloseOperation(jFHistoricos.DISPOSE_ON_CLOSE);
        oFormHistorico.setTitle("HISTÓRICO");
        oFormHistorico.pack();
        oFormHistorico.setLocationRelativeTo(null);
        oFormHistorico.setVisible(true);

    }//GEN-LAST:event_historicojButtonActionPerformed

    private void cadastroEnderecojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroEnderecojButtonActionPerformed
        // TODO add your handling code here:
        jFEnderecos oFormendereco = new jFEnderecos();
        oFormendereco.conecta = conecta;
        oFormendereco.cod_pessoa_endereco = codPessoa;
        oFormendereco.codPessoaLogada_endereco = cod_acesso_usuario;
        oFormendereco.pessoa_usuarioLogadoEndereco = pessoas_usuario_logado;
        oFormendereco.setTitle("Cadastro Endereços");
        oFormendereco.pack();
        oFormendereco.setLocationRelativeTo(null);
        oFormendereco.setModal(true);
        oFormendereco.setVisible(true);
    }//GEN-LAST:event_cadastroEnderecojButtonActionPerformed

    private void atualizaEnderecojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaEnderecojButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGrandeEnderecos();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaEnderecojButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFPessoas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton atualizaEnderecojButton;
    private javax.swing.JButton atualizaTelefonejButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastrarTelefonejButton;
    private javax.swing.JButton cadastroEnderecojButton;
    private javax.swing.JFormattedTextField data_cadastrojFormattedTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeEnderecosjTable;
    private javax.swing.JTable gradePessoasjTable;
    private javax.swing.JTable gradeTelefonejTable;
    private javax.swing.JButton historicojButton;
    private javax.swing.JSpinner identificadorjSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField pessoajTextField;
    private javax.swing.JTextArea pessoasObservacaojTextArea;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox statusjComboBox;
    private javax.swing.JComboBox tipoPessoajComboBox;
    private javax.swing.JButton usuariojButton;
    // End of variables declaration//GEN-END:variables

}
