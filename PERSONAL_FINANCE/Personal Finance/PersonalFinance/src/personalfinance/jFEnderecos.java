/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFEnderecos.java
 *
 * Created on 04/08/2014, 20:20:07
 */

package personalfinance;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import personalfinance.classes.ClassConecta;
import personalfinance.classes.ColorRenderer;
import personalfinance.classes.Enderecos;
import personalfinance.classes.Funcoes;
import personalfinance.classes.Historicos;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFEnderecos extends javax.swing.JDialog {

    /** Creates new form jFEnderecos */
    public jFEnderecos() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeEnderecosjTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codEnderecojSpinner = new javax.swing.JSpinner();
        siglaLogradourojTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        logradourojTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numerojTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bairrojTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cidadejTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        paisjTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        complementojTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();
        cepjFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        estadojComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(personalfinance.PersonalFinanceApp.class).getContext().getResourceMap(jFEnderecos.class);
        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar1.add(jSeparator2);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        gradeEnderecosjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID#", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeEnderecosjTable.setName("gradeEnderecosjTable"); // NOI18N
        gradeEnderecosjTable.setSelectionForeground(resourceMap.getColor("gradeEnderecosjTable.selectionForeground")); // NOI18N
        gradeEnderecosjTable.getTableHeader().setReorderingAllowed(false);
        gradeEnderecosjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeEnderecosjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeEnderecosjTable);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeEnderecosjTable.columnModel.title0")); // NOI18N
        gradeEnderecosjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeEnderecosjTable.getColumnModel().getColumn(1).setPreferredWidth(480);
        gradeEnderecosjTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradeEnderecosjTable.columnModel.title1")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setForeground(resourceMap.getColor("jTabbedPane1.foreground")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        codEnderecojSpinner.setEnabled(false);
        codEnderecojSpinner.setName("codEnderecojSpinner"); // NOI18N

        siglaLogradourojTextField.setText(resourceMap.getString("siglaLogradourojTextField.text")); // NOI18N
        siglaLogradourojTextField.setName("siglaLogradourojTextField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        logradourojTextField.setText(resourceMap.getString("logradourojTextField.text")); // NOI18N
        logradourojTextField.setName("logradourojTextField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        numerojTextField.setText(resourceMap.getString("numerojTextField.text")); // NOI18N
        numerojTextField.setName("numerojTextField"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        bairrojTextField.setText(resourceMap.getString("bairrojTextField.text")); // NOI18N
        bairrojTextField.setName("bairrojTextField"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        cidadejTextField.setText(resourceMap.getString("cidadejTextField.text")); // NOI18N
        cidadejTextField.setName("cidadejTextField"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        paisjTextField.setText(resourceMap.getString("paisjTextField.text")); // NOI18N
        paisjTextField.setName("paisjTextField"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        complementojTextField.setText(resourceMap.getString("complementojTextField.text")); // NOI18N
        complementojTextField.setName("complementojTextField"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel4.border.title"), 0, 0, null, resourceMap.getColor("jPanel4.border.titleColor"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        observacaojTextArea.setName("observacaojTextArea"); // NOI18N
        jScrollPane2.setViewportView(observacaojTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        try {
            cepjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cepjFormattedTextField.setName("cepjFormattedTextField"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        estadojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "ACRE", "ALAGOAS", "AMAPÁ", "AMAZONAS", "BAHIA", "CEARÁ", "DISTRITO FEDERAL", "ESPIRITO SANTO", "GOIÁS", "MARANHÃO", "MATO GROSSO", "MATO GROSSO DO SUL", "MINAS GERAIS", "PARANÁ", "PARAÍBA", "PARÁ", "PERNAMBUCO", "PIAUÍ", "RIO DE JANEIRO", "RIO GRANDE DO NORTE", "RIO GRANDE SO SUL", "RONDONIA", "RORAIMA", "SANTA CATARINA", "SERGIPE", "SÃO PAULO", "TOCANTINS" }));
        estadojComboBox.setName("estadojComboBox"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(codEnderecojSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addComponent(cepjFormattedTextField, 0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cidadejTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(siglaLogradourojTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(logradourojTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(estadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(paisjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(numerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bairrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(complementojTextField))
                            .addComponent(jLabel9))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codEnderecojSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siglaLogradourojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logradourojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bairrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complementojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cepjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paisjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    int codEndereco;

    int cod_pessoa_endereco;

    int codPessoaLogada_endereco;

    String pessoa_usuarioLogadoEndereco;


    public void getGrandeEnderecos() throws ParseException{
       //Consultar Endereços
        Enderecos oEndereco = new Enderecos();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Endereço"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeEnderecosjTable.setModel(modeloTabela);
        gradeEnderecosjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeEnderecosjTable.getColumnModel().getColumn(1).setPreferredWidth(480);

        gradeEnderecosjTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA


try {
            oEndereco.setCod_pessoa(cod_pessoa_endereco);

            resultSet = oEndereco.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Enderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_ENDERECO")),
                    resultSet.getString("SIGLA_LOGRADOURO")
                    + " " + resultSet.getString("LOGRADOURO")
                    + ", " + resultSet.getString("NUMERO")
                    + ", " + resultSet.getString("BAIRRO")
                    + ", " + resultSet.getString("CIDADE")
                    + " - "+ resultSet.getString("ESTADO")
                    + " - "+ resultSet.getString("PAIS"),
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Enderecos.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    public void getFiedEnderecos(int codEndereco) throws ParseException{

        Enderecos oEndereco = new Enderecos();
        ResultSet rs = null;
        oEndereco.setCod_endereco(codEndereco);

        try {
            rs = oEndereco.getConsultar();
            rs.next();

            //Pegar campos
            codEnderecojSpinner.setValue(rs.getInt("COD_ENDERECO"));
            siglaLogradourojTextField.setText(rs.getString("SIGLA_LOGRADOURO"));
            logradourojTextField.setText(rs.getString("LOGRADOURO"));
            numerojTextField.setText(rs.getString("NUMERO"));
            bairrojTextField.setText(rs.getString("BAIRRO"));
            cidadejTextField.setText(rs.getString("CIDADE"));
            estadojComboBox.setSelectedItem(rs.getString("ESTADO"));
            paisjTextField.setText(rs.getString("PAIS"));
            complementojTextField.setText(rs.getString("COMPLEMENTO"));
            cepjFormattedTextField.setText(rs.getString("CEP"));
            observacaojTextArea.setText(rs.getString("OBSERVACAO"));

        } catch (SQLException ex) {
            Logger.getLogger(Enderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }



    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        siglaLogradourojTextField.grabFocus();


        ClassConecta.conecta();

        buscarjButtonActionPerformed(null);

    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        siglaLogradourojTextField.grabFocus();

        ClassConecta.conecta();

        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }

        codEnderecojSpinner.setValue(0);
        siglaLogradourojTextField.setText("");
        logradourojTextField.setText("");
        numerojTextField.setText("");
        bairrojTextField.setText("");
        cidadejTextField.setText("");
        estadojComboBox.setSelectedItem("--");
        paisjTextField.setText("");
        complementojTextField.setText("");
        observacaojTextArea.setText("");
        cepjFormattedTextField.setText("");
        
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Enderecos oEndereco = new Enderecos();

        if (siglaLogradourojTextField.getText().equals("") ||
                logradourojTextField.getText().equals("") ||
                numerojTextField.getText().equals("") ||
                bairrojTextField.getText().equals("") ||
                cidadejTextField.getText().equals("") ||
                estadojComboBox.getSelectedItem().equals("--") ||
                paisjTextField.getText().equals("")){

                JOptionPane.showMessageDialog(null, "Todos os CAMPOS são obrigatórios", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
                novojButtonActionPerformed(evt);

        }else{

        oEndereco.setCod_pessoa(cod_pessoa_endereco);

        oEndereco.setSigla_logradouro(siglaLogradourojTextField.getText().trim().toUpperCase());
        oEndereco.setLogradouro(logradourojTextField.getText().trim().toUpperCase());
        oEndereco.setNumero(numerojTextField.getText().trim().toUpperCase());
        oEndereco.setBairro(bairrojTextField.getText().trim().toUpperCase());
        oEndereco.setCidade(cidadejTextField.getText().trim().toUpperCase());
        oEndereco.setEstado(estadojComboBox.getSelectedItem().toString());
        oEndereco.setPais(paisjTextField.getText().trim().toUpperCase());
        oEndereco.setComplemento(complementojTextField.getText().trim().toUpperCase());
        oEndereco.setObservacao(observacaojTextArea.getText().trim().toUpperCase());
        oEndereco.setCep(cepjFormattedTextField.getText());
        oEndereco.setCadastrar();

        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }


        // *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(codPessoaLogada_endereco);
                oHistorico.setHistorico("CADASTRO DE ENDEREÇO "
                        + "\n"+ siglaLogradourojTextField.getText().trim().toUpperCase()
                        + " " + logradourojTextField.getText().trim().toUpperCase()
                        + ", " + numerojTextField.getText().trim().toUpperCase()
                        + ", " + bairrojTextField.getText().trim().toUpperCase()
                        + ", " + cidadejTextField.getText().trim().toUpperCase()
                        + ", " + estadojComboBox.getSelectedItem().toString()
                        + "-" + paisjTextField.getText().trim().toUpperCase()
                        + "\n"
                        + " CADASTRO EM "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogadoEndereco);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("CADASTRO NO SISTEMA");
                oHistorico.setCadastrar();

                try{

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            getGrandeEnderecos();
        } catch (ParseException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGrandeEnderecos();
        } catch (ParseException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void gradeEnderecosjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeEnderecosjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
            codEndereco = Integer.parseInt(gradeEnderecosjTable.getValueAt(gradeEnderecosjTable.getSelectedRow(), 0).toString());
            if (codEndereco == 0) {
                return;
            }
        try {
            getFiedEnderecos(codEndereco);
        } catch (ParseException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeEnderecosjTableMouseClicked

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Enderecos oEndereco = new Enderecos();

        oEndereco.setCod_pessoa(cod_pessoa_endereco);
        oEndereco.setCod_endereco(codEndereco);

        oEndereco.setSigla_logradouro(siglaLogradourojTextField.getText().trim().toUpperCase());
        oEndereco.setLogradouro(logradourojTextField.getText().trim().toUpperCase());
        oEndereco.setNumero(numerojTextField.getText().trim().toUpperCase());
        oEndereco.setBairro(bairrojTextField.getText().trim().toUpperCase());
        oEndereco.setCidade(cidadejTextField.getText().trim().toUpperCase());
        oEndereco.setEstado(estadojComboBox.getSelectedItem().toString());
        oEndereco.setPais(paisjTextField.getText().trim().toUpperCase());
        oEndereco.setComplemento(complementojTextField.getText().trim().toUpperCase());
        oEndereco.setObservacao(observacaojTextArea.getText().trim().toUpperCase());
        oEndereco.setCep(cepjFormattedTextField.getText());
        oEndereco.setAlterar(conecta);

        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }


        // *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(codPessoaLogada_endereco);
                oHistorico.setHistorico("ATUALIZAÇÃO DE DADOS CADASTRAIS - ENDEREÇOS "
                        + "\n"+ siglaLogradourojTextField.getText().trim().toUpperCase()
                        + " " + logradourojTextField.getText().trim().toUpperCase()
                        + ", " + numerojTextField.getText().trim().toUpperCase()
                        + ", " + bairrojTextField.getText().trim().toUpperCase()
                        + ", " + cidadejTextField.getText().trim().toUpperCase()
                        + ", " + estadojComboBox.getSelectedItem().toString()
                        + "-" + paisjTextField.getText().trim().toUpperCase()
                        + "\n"
                        + " ALTERADO EM "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogadoEndereco);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("ATUALIZAÇÃO DE ENDEREÇO");
                oHistorico.setCadastrar();

                try{

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            getGrandeEnderecos();
        } catch (ParseException ex) {
            Logger.getLogger(jFEnderecos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        int codEnderecoDelete = 0;
        codEnderecoDelete = Integer.parseInt(gradeEnderecosjTable.getValueAt(gradeEnderecosjTable.getSelectedRow(), 0).toString());

        Enderecos oEndereco = new Enderecos();
        oEndereco.setCod_endereco(codEnderecoDelete);
        oEndereco.setExcluir(conecta);
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);

// *******************INCLUINDO DADOS NO HISTORICO*******************************************************

                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(codPessoaLogada_endereco);
                oHistorico.setHistorico("EXCLUSÃO DE ENDEREÇO. "
                        + "\n"+ siglaLogradourojTextField.getText().trim().toUpperCase()
                        + " " + logradourojTextField.getText().trim().toUpperCase()
                        + ", " + numerojTextField.getText().trim().toUpperCase()
                        + ", " + bairrojTextField.getText().trim().toUpperCase()
                        + ", " + cidadejTextField.getText().trim().toUpperCase()
                        + ", " + estadojComboBox.getSelectedItem().toString()
                        + "-" + paisjTextField.getText().trim().toUpperCase()
                        + "\n"
                        + " EXCLUÍDO EM "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogadoEndereco);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("EXCLUSÃO DE DADOS CADASTRAIS");
                oHistorico.setCadastrar();

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);

// *******************FIM DAINCLUSÃO DE DADOS NO HISTORICO*************************************************

        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        codEnderecojSpinner.setValue(0);
        siglaLogradourojTextField.setText("");
        logradourojTextField.setText("");
        numerojTextField.setText("");
        bairrojTextField.setText("");
        cidadejTextField.setText("");
        estadojComboBox.setSelectedItem("--");
        paisjTextField.setText("");
        complementojTextField.setText("");
        observacaojTextArea.setText("");
        cepjFormattedTextField.setText("");

        try {
            getGrandeEnderecos();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFEnderecos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JTextField bairrojTextField;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JFormattedTextField cepjFormattedTextField;
    private javax.swing.JTextField cidadejTextField;
    private javax.swing.JSpinner codEnderecojSpinner;
    private javax.swing.JTextField complementojTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JComboBox estadojComboBox;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeEnderecosjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField logradourojTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField numerojTextField;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JTextField paisjTextField;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JTextField siglaLogradourojTextField;
    // End of variables declaration//GEN-END:variables

}
