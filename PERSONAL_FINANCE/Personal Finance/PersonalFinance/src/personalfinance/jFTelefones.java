/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFTelefones.java
 *
 * Created on 19/07/2014, 22:48:47
 */

package personalfinance;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import personalfinance.classes.ClassConecta;
import personalfinance.classes.ColorRenderer;
import personalfinance.classes.Funcoes;
import personalfinance.classes.Historicos;
import personalfinance.classes.Telefones;

/**
 *
 * @author LUCIANO CARRAFA BENFICA
 */
public class jFTelefones extends javax.swing.JDialog {

    /** Creates new form jFTelefones */
    public jFTelefones() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();
        ramaljTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        numero_telefonejFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        dddjFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        tipo_TelefonejComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeTelefonejTable = new javax.swing.JTable();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(personalfinance.PersonalFinanceApp.class).getContext().getResourceMap(jFTelefones.class);
        jFormattedTextField1.setText(resourceMap.getString("jFormattedTextField1.text")); // NOI18N
        jFormattedTextField1.setName("jFormattedTextField1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar1.add(jSeparator2);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        observacaojTextArea.setName("observacaojTextArea"); // NOI18N
        jScrollPane1.setViewportView(observacaojTextArea);

        ramaljTextField.setText(resourceMap.getString("ramaljTextField.text")); // NOI18N
        ramaljTextField.setName("ramaljTextField"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        try {
            numero_telefonejFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        numero_telefonejFormattedTextField.setName("numero_telefonejFormattedTextField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        dddjFormattedTextField.setText(resourceMap.getString("dddjFormattedTextField.text")); // NOI18N
        dddjFormattedTextField.setName("dddjFormattedTextField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        tipo_TelefonejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RESIDÊNCIAL", "CELULAR", "CELULAR 9 DIGITOS", "COMERCIAL", "SAC 5 DIGITOS" }));
        tipo_TelefonejComboBox.setName("tipo_TelefonejComboBox"); // NOI18N
        tipo_TelefonejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_TelefonejComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tipo_TelefonejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dddjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numero_telefonejFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(ramaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(81, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo_TelefonejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dddjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numero_telefonejFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ramaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        gradeTelefonejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id#", "Tipo telefone", "Numero", "ramal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeTelefonejTable.setName("gradeTelefonejTable"); // NOI18N
        gradeTelefonejTable.getTableHeader().setReorderingAllowed(false);
        gradeTelefonejTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeTelefonejTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradeTelefonejTable);
        gradeTelefonejTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonejTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title0")); // NOI18N
        gradeTelefonejTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(80);
        gradeTelefonejTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title1")); // NOI18N
        gradeTelefonejTable.getColumnModel().getColumn(2).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(160);
        gradeTelefonejTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title2")); // NOI18N
        gradeTelefonejTable.getColumnModel().getColumn(3).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("gradeTelefonejTable.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    int cod_Pessoa_Telefone;
    int cod_codUsuarioLogado_telefone;
    String pessoa_usuarioLogado_telefone;
    int codTelefone;

    MaskFormatter formato = null;


    public void getGrandeTelefone() throws ParseException{
       //Consultar Telefones
        Telefones oTelefone = new Telefones();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Tipo telefone", "Numero", "Ramal"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTelefonejTable.setModel(modeloTabela);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(80);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(160);
        gradeTelefonejTable.getColumnModel().getColumn(3).setPreferredWidth(50);

        gradeTelefonejTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA


try {
            oTelefone.setCod_pessoa(cod_Pessoa_Telefone);

            resultSet = oTelefone.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_TELEFONE")),
                    resultSet.getString("TIPO_TELEFONE"),
                    resultSet.getString("DDD")+"-"+resultSet.getString("NUMERO_TELEFONE"),
                    resultSet.getString("RAMAL"),
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }

    public void getFieldTelefone(int codTelefone) throws ParseException{

        Telefones oTelefone = new Telefones();
        ResultSet rs = null;
        oTelefone.setCod_telefone(codTelefone);

        try {
            rs = oTelefone.getConsultar();
            rs.next();

            //Pegar campos
            tipo_TelefonejComboBox.setSelectedItem(rs.getString("TIPO_TELEFONE"));
            dddjFormattedTextField.setText(rs.getString("DDD"));
            numero_telefonejFormattedTextField.setText(rs.getString("NUMERO_TELEFONE"));
            ramaljTextField.setText(rs.getString("RAMAL"));
            observacaojTextArea.setText(rs.getString("OBSERVACAO"));

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }



    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        tipo_TelefonejComboBox.grabFocus();

        ClassConecta.conecta();


        try {
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }

        buscarjButtonActionPerformed(null);

        
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        if (!novojButton.isEnabled()){
                Object[] options = {"Sim", "Não"};
                int sd = JOptionPane.showOptionDialog(null, "Deseja realmente SAIR?\n As informações não salvas serão perdidas."
                        , "Confirmação do Sistema!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if (sd != 0) {
                    return;
                }

                this.dispose();

            }else{

                this.dispose();

            }
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void tipo_TelefonejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_TelefonejComboBoxActionPerformed
        // TODO add your handling code here:

        if (tipo_TelefonejComboBox.getSelectedItem().equals("SAC 5 DIGITOS")) {
            try {
                formato = null;
                numero_telefonejFormattedTextField.setText("");
                formato = new MaskFormatter("#####");
            } catch (ParseException ex) {
                Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            if ( tipo_TelefonejComboBox.getSelectedItem().equals("RESIDÊNCIAL")){
                try {
                    formato = null;
                    numero_telefonejFormattedTextField.setText("");
                    formato = new MaskFormatter("####-####");
                } catch (ParseException ex) {
                    Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
                }

                
            }else{

                if (tipo_TelefonejComboBox.getSelectedItem().equals("CELULAR")){
                    try {
                        formato = null;
                        numero_telefonejFormattedTextField.setText("");
                        formato = new MaskFormatter("####-####");
                    } catch (ParseException ex) {
                        Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{

                    if(tipo_TelefonejComboBox.getSelectedItem().equals("CELULAR 9 DIGITOS")){
                        try {
                        formato = null;
                        numero_telefonejFormattedTextField.setText("");
                        formato = new MaskFormatter("#####-####");
                    } catch (ParseException ex) {
                        Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    }else{

                try {
                    formato = new MaskFormatter("####-####");
                } catch (ParseException ex) {
                    Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
                }
                    }
                }
            }

        }
        DefaultFormatterFactory fator = new DefaultFormatterFactory(formato);
        numero_telefonejFormattedTextField.setFormatterFactory(fator);

       
    }//GEN-LAST:event_tipo_TelefonejComboBoxActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Telefones oTelefone = new Telefones();

        if (numero_telefonejFormattedTextField.getText().equals("")){

                JOptionPane.showMessageDialog(null, "O campo NUMERO é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
                novojButtonActionPerformed(evt);
            }

        oTelefone.setCod_pessoa(cod_Pessoa_Telefone);
        oTelefone.setTipo_telefone(tipo_TelefonejComboBox.getSelectedItem().toString());
        oTelefone.setDDD(dddjFormattedTextField.getText());
        oTelefone.setNumero_telefone(numero_telefonejFormattedTextField.getText());
        oTelefone.setRamal(ramaljTextField.getText());
        oTelefone.setObservacao(observacaojTextArea.getText());
        oTelefone.setCadastrar();
        
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
// *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_codUsuarioLogado_telefone);
                oHistorico.setHistorico("CADASTRO NUMERO DE TELEFONE "
                        + "\n"+"NUMERO: "+ dddjFormattedTextField.getText()+"-"+numero_telefonejFormattedTextField.getText()
                        + " CADASTRO EM "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogado_telefone);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("CADASTRO NO SISTEMA");
                oHistorico.setCadastrar();
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
// *******************FIM DA INCLUSÃO DADOS NO HISTORICO*******************************************************
        try {
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        tipo_TelefonejComboBox.grabFocus();

        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
        tipo_TelefonejComboBox.setSelectedItem("RESIDÊNCIAL");
        dddjFormattedTextField.setText("");
        numero_telefonejFormattedTextField.setText("");
        ramaljTextField.setText("");
        observacaojTextArea.setText("");

    }//GEN-LAST:event_novojButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);


        Telefones oTelefone = new Telefones();

        if (numero_telefonejFormattedTextField.getText().equals("")){

                JOptionPane.showMessageDialog(null, "O campo NUMERO é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
                novojButtonActionPerformed(evt);
            }

        oTelefone.setCod_pessoa(cod_Pessoa_Telefone);
        oTelefone.setCod_telefone(codTelefone);
        oTelefone.setTipo_telefone(tipo_TelefonejComboBox.getSelectedItem().toString());
        oTelefone.setDDD(dddjFormattedTextField.getText());
        oTelefone.setNumero_telefone(numero_telefonejFormattedTextField.getText());
        oTelefone.setRamal(ramaljTextField.getText());
        oTelefone.setObservacao(observacaojTextArea.getText());
        oTelefone.setAlterar(conecta);

        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
// *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "hh:mm:ss - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_codUsuarioLogado_telefone);
                oHistorico.setHistorico("ATUALIZAÇÃO DE DADOS CADASTRAIS - TELEFONE "
                        + "\n"+"NUMERO: "+ dddjFormattedTextField.getText()+"-"+numero_telefonejFormattedTextField.getText()
                        + " ATUALIZADO EM: "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogado_telefone);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("ATUALIZAÇÃO DE TELEFONE");
                oHistorico.setCadastrar();
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
// *******************FIM DA INCLUSÃO DADOS NO HISTORICO*******************************************************
        try {
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void gradeTelefonejTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeTelefonejTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
            codTelefone = Integer.parseInt(gradeTelefonejTable.getValueAt(gradeTelefonejTable.getSelectedRow(), 0).toString());
            if (codTelefone == 0) {
                return;
            }
        try {
            getFieldTelefone(codTelefone);
        } catch (ParseException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeTelefonejTableMouseClicked

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        int codPessoaDelete = 0;
        codPessoaDelete = Integer.parseInt(gradeTelefonejTable.getValueAt(gradeTelefonejTable.getSelectedRow(), 0).toString());

        Telefones oTelefone = new Telefones();
        oTelefone.setCod_telefone(codPessoaDelete);
        oTelefone.setExcluir(conecta);
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);

// *******************INCLUINDO DADOS NO HISTORICO*******************************************************

                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_Pessoa_Telefone);
                oHistorico.setHistorico("EXCLUSÃO DE TELEFONE. "
                        + "\n informações excluídas:"
                        + "\n"+ "TIPO tELEFONE: " + tipo_TelefonejComboBox.getSelectedItem().toString()
                        + "\n" + "NUMERO " + dddjFormattedTextField.getText()+"-"+numero_telefonejFormattedTextField.getText()
                        + "\n" + "RAMAL: " + ramaljTextField.getText()
                        + "\n" + " EXCLUÍDO EM: "+ data1 + " " + hora1);
                oHistorico.setPessoa(pessoa_usuarioLogado_telefone);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("EXCLUSÃO DE DADOS CADASTRAIS");
                oHistorico.setCadastrar();

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        tipo_TelefonejComboBox.setSelectedItem("RESIDÊNCIA");
        dddjFormattedTextField.setText("");
        numero_telefonejFormattedTextField.setText("");
        ramaljTextField.setText("");
        observacaojTextArea.setText("");

        try {
            getGrandeTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFTelefones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JFormattedTextField dddjFormattedTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeTelefonejTable;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton novojButton;
    private javax.swing.JFormattedTextField numero_telefonejFormattedTextField;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JTextField ramaljTextField;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox tipo_TelefonejComboBox;
    // End of variables declaration//GEN-END:variables

}
