/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFParcelas.java
 *
 * Created on 22/11/2014, 17:27:58
 */

package personalfinance;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import personalfinance.classes.CentroCusto;
import personalfinance.classes.ClassConecta;
import personalfinance.classes.ComboItem;
import personalfinance.classes.Contas;
import personalfinance.classes.Funcoes;
import personalfinance.classes.Parcelas;
import personalfinance.classes.Pessoas;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFParcelas extends javax.swing.JDialog {

    /** Creates new form jFParcelas */
    public jFParcelas() {
        initComponents();

        buttonGroup1.add(pessoasjRadioButton);
        buttonGroup1.add(fornecedoresjRadioButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        gerarContasAPagarjButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pessoasjRadioButton = new javax.swing.JRadioButton();
        fornecedoresjRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        clienteResponsaveljComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        contajComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        centroCustojComboBox = new javax.swing.JComboBox();
        cadastraPessoajButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        atualizaClienteResponsaveljButton = new javax.swing.JButton();
        cadastraContasjButton = new javax.swing.JButton();
        atualizaContasjButton = new javax.swing.JButton();
        cadastraCentroCustojButton = new javax.swing.JButton();
        atualizaCentroCusto = new javax.swing.JButton();
        situaçãojComboBox = new javax.swing.JComboBox();
        quitarAposGerarjCheckBox = new javax.swing.JCheckBox();
        dataPagamentojLabel = new javax.swing.JLabel();
        dataPagamentojFormattedTextField = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        quantidadejSpinner = new javax.swing.JSpinner();
        dataPrimeiroVencimentojFormattedTextField = new javax.swing.JFormattedTextField();
        valorCadaParcelajFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        valorDocjFormattedTextField = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        parcelaGradejTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(personalfinance.PersonalFinanceApp.class).getContext().getResourceMap(jFParcelas.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        gerarContasAPagarjButton.setBackground(resourceMap.getColor("gerarContasAPagarjButton.background")); // NOI18N
        gerarContasAPagarjButton.setIcon(resourceMap.getIcon("gerarContasAPagarjButton.icon")); // NOI18N
        gerarContasAPagarjButton.setText(resourceMap.getString("gerarContasAPagarjButton.text")); // NOI18N
        gerarContasAPagarjButton.setName("gerarContasAPagarjButton"); // NOI18N
        gerarContasAPagarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarContasAPagarjButtonActionPerformed(evt);
            }
        });

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gerarContasAPagarjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 618, Short.MAX_VALUE)
                .addComponent(sairjButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gerarContasAPagarjButton)
                    .addComponent(sairjButton))
                .addContainerGap(4, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(resourceMap.getColor("jTabbedPane1.background")); // NOI18N
        jTabbedPane1.setForeground(resourceMap.getColor("jTabbedPane1.foreground")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel3.border.title"), 0, 0, null, resourceMap.getColor("jPanel3.border.titleColor"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        buttonGroup1.add(pessoasjRadioButton);
        pessoasjRadioButton.setSelected(true);
        pessoasjRadioButton.setText(resourceMap.getString("pessoasjRadioButton.text")); // NOI18N
        pessoasjRadioButton.setActionCommand(resourceMap.getString("pessoasjRadioButton.actionCommand")); // NOI18N
        pessoasjRadioButton.setName("pessoasjRadioButton"); // NOI18N
        pessoasjRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pessoasjRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(fornecedoresjRadioButton);
        fornecedoresjRadioButton.setText(resourceMap.getString("fornecedoresjRadioButton.text")); // NOI18N
        fornecedoresjRadioButton.setName("fornecedoresjRadioButton"); // NOI18N
        fornecedoresjRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fornecedoresjRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        clienteResponsaveljComboBox.setName("clienteResponsaveljComboBox"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        contajComboBox.setName("contajComboBox"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        centroCustojComboBox.setName("centroCustojComboBox"); // NOI18N

        cadastraPessoajButton.setIcon(resourceMap.getIcon("cadastraPessoajButton.icon")); // NOI18N
        cadastraPessoajButton.setText(resourceMap.getString("cadastraPessoajButton.text")); // NOI18N
        cadastraPessoajButton.setContentAreaFilled(false);
        cadastraPessoajButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraPessoajButton.setName("cadastraPessoajButton"); // NOI18N
        cadastraPessoajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraPessoajButtonActionPerformed(evt);
            }
        });

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        atualizaClienteResponsaveljButton.setIcon(resourceMap.getIcon("atualizaClienteResponsaveljButton.icon")); // NOI18N
        atualizaClienteResponsaveljButton.setText(resourceMap.getString("atualizaClienteResponsaveljButton.text")); // NOI18N
        atualizaClienteResponsaveljButton.setContentAreaFilled(false);
        atualizaClienteResponsaveljButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaClienteResponsaveljButton.setName("atualizaClienteResponsaveljButton"); // NOI18N
        atualizaClienteResponsaveljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaClienteResponsaveljButtonActionPerformed(evt);
            }
        });

        cadastraContasjButton.setIcon(resourceMap.getIcon("cadastraContasjButton.icon")); // NOI18N
        cadastraContasjButton.setText(resourceMap.getString("cadastraContasjButton.text")); // NOI18N
        cadastraContasjButton.setContentAreaFilled(false);
        cadastraContasjButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraContasjButton.setName("cadastraContasjButton"); // NOI18N
        cadastraContasjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraContasjButtonActionPerformed(evt);
            }
        });

        atualizaContasjButton.setIcon(resourceMap.getIcon("atualizaContasjButton.icon")); // NOI18N
        atualizaContasjButton.setText(resourceMap.getString("atualizaContasjButton.text")); // NOI18N
        atualizaContasjButton.setContentAreaFilled(false);
        atualizaContasjButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaContasjButton.setName("atualizaContasjButton"); // NOI18N
        atualizaContasjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaContasjButtonActionPerformed(evt);
            }
        });

        cadastraCentroCustojButton.setIcon(resourceMap.getIcon("cadastraCentroCustojButton.icon")); // NOI18N
        cadastraCentroCustojButton.setText(resourceMap.getString("cadastraCentroCustojButton.text")); // NOI18N
        cadastraCentroCustojButton.setContentAreaFilled(false);
        cadastraCentroCustojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraCentroCustojButton.setName("cadastraCentroCustojButton"); // NOI18N
        cadastraCentroCustojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraCentroCustojButtonActionPerformed(evt);
            }
        });

        atualizaCentroCusto.setIcon(resourceMap.getIcon("atualizaCentroCusto.icon")); // NOI18N
        atualizaCentroCusto.setText(resourceMap.getString("atualizaCentroCusto.text")); // NOI18N
        atualizaCentroCusto.setContentAreaFilled(false);
        atualizaCentroCusto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaCentroCusto.setName("atualizaCentroCusto"); // NOI18N
        atualizaCentroCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaCentroCustoActionPerformed(evt);
            }
        });

        situaçãojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Reparcelada", "Cancelada", "Permuta" }));
        situaçãojComboBox.setName("situaçãojComboBox"); // NOI18N

        quitarAposGerarjCheckBox.setForeground(resourceMap.getColor("quitarAposGerarjCheckBox.foreground")); // NOI18N
        quitarAposGerarjCheckBox.setText(resourceMap.getString("quitarAposGerarjCheckBox.text")); // NOI18N
        quitarAposGerarjCheckBox.setName("quitarAposGerarjCheckBox"); // NOI18N
        quitarAposGerarjCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quitarAposGerarjCheckBoxStateChanged(evt);
            }
        });

        dataPagamentojLabel.setForeground(resourceMap.getColor("dataPagamentojLabel.foreground")); // NOI18N
        dataPagamentojLabel.setText(resourceMap.getString("dataPagamentojLabel.text")); // NOI18N
        dataPagamentojLabel.setName("dataPagamentojLabel"); // NOI18N

        dataPagamentojFormattedTextField.setText(resourceMap.getString("dataPagamentojFormattedTextField.text")); // NOI18N
        dataPagamentojFormattedTextField.setName("dataPagamentojFormattedTextField"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(61, 61, 61)
                                .addComponent(pessoasjRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fornecedoresjRadioButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(contajComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(centroCustojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(dataPagamentojLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dataPagamentojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(clienteResponsaveljComboBox, 0, 330, Short.MAX_VALUE)
                                    .addComponent(situaçãojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cadastraCentroCustojButton, 0, 0, Short.MAX_VALUE)
                            .addComponent(cadastraContasjButton, 0, 0, Short.MAX_VALUE)
                            .addComponent(cadastraPessoajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(atualizaContasjButton, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(atualizaClienteResponsaveljButton, 0, 0, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atualizaCentroCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, Short.MAX_VALUE))))
                    .addComponent(quitarAposGerarjCheckBox))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fornecedoresjRadioButton)
                    .addComponent(pessoasjRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(clienteResponsaveljComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cadastraPessoajButton)
                    .addComponent(atualizaClienteResponsaveljButton))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(contajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cadastraContasjButton)
                    .addComponent(atualizaContasjButton))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(centroCustojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(situaçãojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quitarAposGerarjCheckBox)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dataPagamentojLabel)
                                .addComponent(dataPagamentojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cadastraCentroCustojButton)
                    .addComponent(atualizaCentroCusto))
                .addContainerGap())
        );

        jPanel4.setBackground(resourceMap.getColor("jPanel4.background")); // NOI18N
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel4.border.title"), 0, 0, null, resourceMap.getColor("jPanel4.border.titleColor"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        quantidadejSpinner.setName("quantidadejSpinner"); // NOI18N
        quantidadejSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantidadejSpinnerStateChanged(evt);
            }
        });

        try {
            dataPrimeiroVencimentojFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataPrimeiroVencimentojFormattedTextField.setName("dataPrimeiroVencimentojFormattedTextField"); // NOI18N

        valorCadaParcelajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        valorCadaParcelajFormattedTextField.setText(resourceMap.getString("valorCadaParcelajFormattedTextField.text")); // NOI18N
        valorCadaParcelajFormattedTextField.setName("valorCadaParcelajFormattedTextField"); // NOI18N
        valorCadaParcelajFormattedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valorCadaParcelajFormattedTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                valorCadaParcelajFormattedTextFieldFocusLost(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        valorDocjFormattedTextField.setEditable(false);
        valorDocjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        valorDocjFormattedTextField.setText(resourceMap.getString("valorDocjFormattedTextField.text")); // NOI18N
        valorDocjFormattedTextField.setName("valorDocjFormattedTextField"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(quantidadejSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(valorCadaParcelajFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(dataPrimeiroVencimentojFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(valorDocjFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(valorCadaParcelajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataPrimeiroVencimentojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(quantidadejSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(valorDocjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBackground(resourceMap.getColor("jPanel5.background")); // NOI18N
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setName("jPanel5"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        parcelaGradejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Parcela", "Vencimento", "Valor", "Documento", "Tipo Doc.", "Obs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        parcelaGradejTable.setName("parcelaGradejTable"); // NOI18N
        jScrollPane1.setViewportView(parcelaGradejTable);
        parcelaGradejTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title0")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title1")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title2")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title3")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title4")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title5")); // NOI18N
        parcelaGradejTable.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("parcelaGradejTable.columnModel.title6")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(269, 269, 269))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    int cod_usuario_logado; //código do usuario logado no sistema
    String usuario_logado;  //nome usuario logado

    ComboItem combo_contas;

    int codPessoa = 0;

    public float valorDoc = 0;

    public int codPedido = 0;

    public String tipoDocOrigem;

    public String natureza;

    public String observacao;

    public boolean isParcelado = false;

    public float valorTotal = 0;

    public int quantParcela = 1;



    public void getGradeParcela(int codDocOrigem) throws ParseException{

       //Consultar pedidos
        Parcelas oParcela = new Parcelas();
        if (codDocOrigem > 0) { //Em caso de gerar uma nova vá direto
            oParcela.setCodDocOrigem(codDocOrigem);
            System.out.println("codDoc_origem: "+codDocOrigem);
        }
        System.out.println("==================================================================================");
        System.out.println("PASSEI DA ZONA 1");

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Código", "Parcela", "Vencimento", "Valor", "Documento", "Tipo Doc.", "Obs"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        parcelaGradejTable.setModel(modeloTabela);
        //Dimensionar colunas
        parcelaGradejTable.getColumnModel().getColumn(0).setMinWidth(60);
        parcelaGradejTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        parcelaGradejTable.getColumnModel().getColumn(0).setMaxWidth(60);
        parcelaGradejTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        parcelaGradejTable.getColumnModel().getColumn(1).setMaxWidth(60);
        parcelaGradejTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        parcelaGradejTable.getColumnModel().getColumn(2).setMaxWidth(100);
        parcelaGradejTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        parcelaGradejTable.getColumnModel().getColumn(3).setMaxWidth(100);
        parcelaGradejTable.getColumnModel().getColumn(4).setPreferredWidth(70);
        parcelaGradejTable.getColumnModel().getColumn(4).setMaxWidth(70);
        parcelaGradejTable.getColumnModel().getColumn(5).setPreferredWidth(80);
        parcelaGradejTable.getColumnModel().getColumn(5).setMaxWidth(80);

//        parcelaGradejTable.setModel(modeloTabela);
//        parcelaGradejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
//        parcelaGradejTable.getColumnModel().getColumn(1).setPreferredWidth(80);
//        parcelaGradejTable.getColumnModel().getColumn(2).setPreferredWidth(160);
//        parcelaGradejTable.getColumnModel().getColumn(3).setPreferredWidth(50);
//        parcelaGradejTable.getColumnModel().getColumn(4).setPreferredWidth(50);
//        parcelaGradejTable.getColumnModel().getColumn(5).setPreferredWidth(50);
//        parcelaGradejTable.getColumnModel().getColumn(6).setPreferredWidth(50);

        System.out.println("CONSTRUIR AS TABELAS");


        try {
            resultSet = oParcela.getConsultar2();
            System.out.println("PASSEI DO GET CONSULTAR");
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while (resultSet.next()) {
                System.out.println("ENTREI NO WHILE");
                //Formatar valor
                DecimalFormat oValorDocOut = new DecimalFormat("###,###,##0.00");
                String oValorDoc = null;
                if (resultSet.getFloat("VALOR_DOCUMENTO") > 0) {
                    oValorDoc = oValorDocOut.format(resultSet.getFloat("VALOR_DOCUMENTO"));
                } else {
                    oValorDoc = null;
                }
                //Fim formatação

                //Formatar data
                SimpleDateFormat datVencOut = new SimpleDateFormat("dd/MM/yyyy");
                String oDatVenc = null;
                if (resultSet.getString("DATA_VENCIMENTO") != null) {
                    oDatVenc = datVencOut.format(resultSet.getDate("DATA_VENCIMENTO"));
                } else {
                    oDatVenc = null;
                }
                //Fim formatação data
                System.out.println("CHEGUEI ATÉ O INICIO PARA PREENCHER AS TABELAS");

                modeloTabela.addRow(new String[]{
//                    Funcoes.getZeroEsq(resultSet.getInt("COD_PARCELA"), 6),
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_PARCELA")),
                    resultSet.getString("PARCELA"),
                    oDatVenc,
                    oValorDoc,
                    resultSet.getString("COD_DOCUMENTO_ORIGEM"),
                    resultSet.getString("TIPO_DOCUMENTO_ORIGEM"),
                    resultSet.getString("OBSERVACAO"),
                });
//                 System.out.println("****** ******* ****** ****** ****** ****");
//                 System.out.println(Funcoes.getCodigoFormat(resultSet.getInt("COD_PARCELA")));
//                 System.out.println(resultSet.getString("PARCELA"));
//                 System.out.println(oDatVenc);
//                 System.out.println(oValorDoc);
//                 System.out.println(resultSet.getString("COD_DOCUMENTO_ORIGEM"));
//                 System.out.println(resultSet.getString("OBSERVACAO"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (conecta != null){
          ClassConecta.conecta();
        }

        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }

        dataPagamentojFormattedTextField.setVisible(false);
        dataPagamentojLabel.setVisible(false);

        try {
            dataPagamentojFormattedTextField.setText(Funcoes.getNowBR());
            dataPrimeiroVencimentojFormattedTextField.setText((Funcoes.getNowBR()));
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (codPedido > 0){
            try {
                getGradeParcela(codPedido);
            } catch (ParseException ex) {
                Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        tipoDocOrigem = null;
        tipoDocOrigem = "Conta a Pagar";

        atualizaContasjButtonActionPerformed(null);
        atualizaCentroCustoActionPerformed(null);
        atualizaClienteResponsaveljButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if ( (!ClassConecta.con.getAutoCommit()) && (!isParcelado) ) {
                //Confirmar
                Object[] options = {"Sim", "Não"};
                int sd = JOptionPane.showOptionDialog(null, "A transação NÃO foi concluída, deseja realmente descartar as alterações ?", "Confirmação!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if (sd == 0) {
                    this.dispose();
                }
            }else{
                this.dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);

    }
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void cadastraPessoajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraPessoajButtonActionPerformed
        // TODO add your handling code here:
        jFPessoas oFormPessoas = new jFPessoas();

        oFormPessoas.conecta = conecta;

        oFormPessoas.cod_acesso_usuario = cod_usuario_logado;
//        oFormPessoas.pessoas_usuario_logado = usuario_logado;
        oFormPessoas.setTitle("Cadastro Pessoas");
        oFormPessoas.pack();
        oFormPessoas.setLocationRelativeTo(null);
        oFormPessoas.setModal(true);
        oFormPessoas.setVisible(true);
    }//GEN-LAST:event_cadastraPessoajButtonActionPerformed

    private void atualizaClienteResponsaveljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaClienteResponsaveljButtonActionPerformed
        // TODO add your handling code here:

        if(pessoasjRadioButton.isSelected()){

        try {
            Pessoas oPessoa = new Pessoas();

            oPessoa.setTipo_pessoa("NORMAL");
            ResultSet rs = null;
            rs = oPessoa.getConsultar();
            clienteResponsaveljComboBox.removeAllItems();
            while (rs.next()) {
                clienteResponsaveljComboBox.addItem(new ComboItem(rs.getInt(1), rs.getString(2)));
            }
            clienteResponsaveljComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }

        }else if (fornecedoresjRadioButton.isSelected()){

            try {
            Pessoas oPessoa = new Pessoas();

            oPessoa.setTipo_pessoa("FORNECEDOR");
            ResultSet rs = null;
            rs = oPessoa.getConsultar();
            clienteResponsaveljComboBox.removeAllItems();
            while (rs.next()) {
                clienteResponsaveljComboBox.addItem(new ComboItem(rs.getInt(1), rs.getString(2)));
            }
            clienteResponsaveljComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }

        }else{
             System.out.println("Erro de novo");
             JOptionPane.showMessageDialog(null, "ERRO NO SISTEMA, CONTATE O ADMINISTRADOR DO SISTEMA");

        }

    }//GEN-LAST:event_atualizaClienteResponsaveljButtonActionPerformed

    private void cadastraContasjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraContasjButtonActionPerformed
        // TODO add your handling code here:
        jFContas oFormContas = new jFContas();

        oFormContas.conecta = conecta;
        oFormContas.cod_acesso_usuario = cod_usuario_logado;
        oFormContas.contas_usuario_logado = usuario_logado;
        oFormContas.setTitle("Cadastro Contas");
        oFormContas.pack();
        oFormContas.setLocationRelativeTo(null);
        oFormContas.setModal(true);
        oFormContas.setVisible(true);
        atualizaContasjButtonActionPerformed(null);
    }//GEN-LAST:event_cadastraContasjButtonActionPerformed

    private void atualizaContasjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaContasjButtonActionPerformed
        // TODO add your handling code here:
        try {
            Contas oConta = new Contas();
            ResultSet rs = null;
            rs = oConta.getConsultar();
            contajComboBox.removeAllItems();
            while (rs.next()) {
                contajComboBox.addItem(new ComboItem(rs.getInt("COD_CONTAS"), rs.getString("BANCO")));
            }
            contajComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_atualizaContasjButtonActionPerformed

    private void cadastraCentroCustojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraCentroCustojButtonActionPerformed
        // TODO add your handling code here:
        jFCentroCusto oFormCentroCusto = new jFCentroCusto();

        oFormCentroCusto.conecta = conecta;
        oFormCentroCusto.cod_acesso_CentroCusto = cod_usuario_logado;
        oFormCentroCusto.setTitle("Centro de Custos");
        oFormCentroCusto.setDefaultCloseOperation(jFCentroCusto.DO_NOTHING_ON_CLOSE);
        oFormCentroCusto.pack();
        oFormCentroCusto.setLocationRelativeTo(null);
        oFormCentroCusto.setModal(true);
        oFormCentroCusto.setVisible(true);
        atualizaCentroCustoActionPerformed(null);

    }//GEN-LAST:event_cadastraCentroCustojButtonActionPerformed

    private void atualizaCentroCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaCentroCustoActionPerformed
        // TODO add your handling code here:
        try {
            CentroCusto oCentroCusto = new CentroCusto();
            ResultSet rs = null;
            rs = oCentroCusto.getConsultar();
            centroCustojComboBox.removeAllItems();
            while (rs.next()) {
                centroCustojComboBox.addItem(new ComboItem(rs.getInt(1), rs.getString(2)));
            }
            centroCustojComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaCentroCustoActionPerformed

    private void quitarAposGerarjCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quitarAposGerarjCheckBoxStateChanged
        // TODO add your handling code here:
        if (quitarAposGerarjCheckBox.isSelected()){
           dataPagamentojFormattedTextField.setVisible(true);
           dataPagamentojLabel.setVisible(true);
        }else{
           dataPagamentojFormattedTextField.setVisible(false);
           dataPagamentojLabel.setVisible(false);
        }
    }//GEN-LAST:event_quitarAposGerarjCheckBoxStateChanged

    private void pessoasjRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pessoasjRadioButtonActionPerformed
        // TODO add your handling code here:
        atualizaClienteResponsaveljButtonActionPerformed(evt);
    }//GEN-LAST:event_pessoasjRadioButtonActionPerformed

    private void fornecedoresjRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fornecedoresjRadioButtonActionPerformed
        // TODO add your handling code here:
        atualizaClienteResponsaveljButtonActionPerformed(evt);
    }//GEN-LAST:event_fornecedoresjRadioButtonActionPerformed

    private void quantidadejSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantidadejSpinnerStateChanged
        // TODO add your handling code here:
        if ( valorDoc  == 0 ){
         if (valorCadaParcelajFormattedTextField.getValue() != null){
          valorDocjFormattedTextField.setValue( Float.parseFloat(valorCadaParcelajFormattedTextField.getValue().toString()) * Integer.parseInt(quantidadejSpinner.getValue().toString()) );
         }

        }else{
         valorCadaParcelajFormattedTextField.setValue( Float.parseFloat(valorDocjFormattedTextField.getValue().toString()) / Integer.parseInt(quantidadejSpinner.getValue().toString()) );
        }
    }//GEN-LAST:event_quantidadejSpinnerStateChanged

    private void valorCadaParcelajFormattedTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorCadaParcelajFormattedTextFieldFocusLost
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            valorCadaParcelajFormattedTextField.commitEdit();
            quantidadejSpinner.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_valorCadaParcelajFormattedTextFieldFocusLost

    private void valorCadaParcelajFormattedTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorCadaParcelajFormattedTextFieldFocusGained
        // TODO add your handling code here:
        quantidadejSpinnerStateChanged(null);
    }//GEN-LAST:event_valorCadaParcelajFormattedTextFieldFocusGained

    private void gerarContasAPagarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarContasAPagarjButtonActionPerformed
        // TODO add your handling code here:
        quantidadejSpinnerStateChanged(null);

        //Verificar campos obrigatorios
        if ( clienteResponsaveljComboBox.getSelectedIndex() == -1 ){
           JOptionPane.showMessageDialog(null, "O Campo <Pessoa/Prestador> é obrigatório.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
           clienteResponsaveljComboBox.grabFocus();
           return;
        }

        //Verificar campos obrigatorios
        if ( contajComboBox.getSelectedIndex() == -1 ){
           JOptionPane.showMessageDialog(null, "O Campo <Conta> é obrigatório.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
           contajComboBox.grabFocus();
           return;
        }

        if ( ( valorDocjFormattedTextField.getValue() == null )
        | (valorCadaParcelajFormattedTextField.getValue() == null) ) {
         JOptionPane.showMessageDialog(null, "O valor de cada e o valor total não pode ser zero.", "Aviso!", JOptionPane.WARNING_MESSAGE);
         return;
        }

        gerarContasAPagarjButton.setEnabled(false);

        try {
        String msgPedido = "";
//        //Dados de observação
//        if (codPedido == 0){
//
//          if (oFormObs.numDoc != null){
//           codPedido       = Integer.parseInt(oFormObs.numDoc);
//          }
//
          if (codPedido == 0){
              Parcelas oUltimoID = new Parcelas();
              codPedido = oUltimoID.getConsultarUltimoID()+1;
              msgPedido = "";
          }else{
              msgPedido += ", "+ tipoDocOrigem + ": "+ codPedido;
          }

//        }
//
//        if (obs == null){
//        obs             = oFormObs.obs;
//        }
//
//        if (observacao == null ){
           observacao = "Conta "+ natureza + " de "+ clienteResponsaveljComboBox.getSelectedItem().toString() + msgPedido;
//        }
//        //fim de dados obs

        //Codigo cliente selecionado anteriormente
        ComboItem oCodCliente = (ComboItem) clienteResponsaveljComboBox.getSelectedItem();
        codPessoa            = oCodCliente.getId();

        if ( codPessoa == 0){
        JOptionPane.showMessageDialog(null,"O campo Cliente/Prestador deve ser informado.", "Aviso!",  JOptionPane.WARNING_MESSAGE );
        return;
        }

        int i;
        int n = Integer.parseInt(quantidadejSpinner.getValue().toString());
        Calendar calendar = Calendar.getInstance();
        // TODO add your handling code here:
        for (i=1; i<=n; i++) {
            Parcelas oParcela = new Parcelas(codPessoa);
            oParcela.setCodPessoa(codPessoa);
            oParcela.setCodDocOrigem(codPedido);

            ComboItem oItem = (ComboItem) contajComboBox.getSelectedItem();
            oParcela.setCodConta(oItem.getId());

            ComboItem oItemCentroCusto = (ComboItem) centroCustojComboBox.getSelectedItem();
            oParcela.setCodCentroCusto(oItemCentroCusto.getId());

            oParcela.setDatEmissao(  new Date() );

            //Formatar data
            SimpleDateFormat datVencOut = new SimpleDateFormat("dd/MM/yyyy");
            Date datVenc = null;

            try {
                if (i == 1){
                datVenc = (Date) datVencOut.parse(dataPrimeiroVencimentojFormattedTextField.getText());
                }else{
                calendar.setTime( Funcoes.getDataFormatBR(dataPrimeiroVencimentojFormattedTextField.getText()) );
                calendar.add(Calendar.MONTH, 1);
                datVenc = calendar.getTime();
                }
                //Definir data primeiro vencimento para o próximo
                dataPrimeiroVencimentojFormattedTextField.setText(Funcoes.getDataFormat(datVenc));

            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao definir a data de vencimento.\n"+ex, "Aviso!", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Fim formatação

            oParcela.setDatVenc( datVenc);
            oParcela.setQuantidade(  Float.parseFloat(quantidadejSpinner.getValue().toString()) );
            oParcela.setSituacao(situaçãojComboBox.getSelectedItem().toString());
            oParcela.setTipoDocOrigem(tipoDocOrigem);
            oParcela.setNatureza(natureza);
            oParcela.setValorDoc(Float.parseFloat(valorCadaParcelajFormattedTextField.getValue().toString()));
            oParcela.setParcela(i);
            oParcela.setObservacao(observacao);

            System.out.println("verifica dados antes da classe cadastrar");
            System.out.println("data vencimento: "+datVenc);
            System.out.println("quantidade: "+Float.parseFloat(quantidadejSpinner.getValue().toString()));
            System.out.println("Situação: "+situaçãojComboBox.getSelectedItem().toString());
            System.out.println("tipodocorigem: "+ tipoDocOrigem);
            System.out.println("natureza: "+ Float.parseFloat(valorCadaParcelajFormattedTextField.getValue().toString()));
            System.out.println("valor doc: "+Float.parseFloat(valorCadaParcelajFormattedTextField.getValue().toString()));
            System.out.println("parcela: "+i);
            System.out.println("observacao: "+observacao);
            System.out.println("************************************************************************");
            System.out.println("codPedido: "+codPedido);

            oParcela.setCadastrar();

        }//Fim for
            try {
                getGradeParcela(codPedido);
            } catch (ParseException ex) {
                Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Em caso de quitação através da ficha quiitar naõ comita aki e sim na tela de quitar
            //Leva o valor  total para o campo crediario
            if (isParcelado){
              valorTotal = Float.parseFloat(valorDocjFormattedTextField.getValue().toString());
            }else{
              ClassConecta.con.commit();
              ClassConecta.con.setAutoCommit(true);
            }

            parcelaGradejTable.setRowSelectionInterval(0, 0);
            JOptionPane.showMessageDialog(null, "As parcelas foram GERADAS com sucesso.", "Informação!", JOptionPane.INFORMATION_MESSAGE);

        //Abrir tela de pagamento
//        if ( quitarAposGerarjCheckBox.isSelected() ){
//          setQuitarAposGerar();
//        }

//            sairjButtonActionPerformed(null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "As parcelas NÃO FORAM GERADAS devido erros.\n"+ex, "Aviso!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_gerarContasAPagarjButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if ( (!ClassConecta.con.getAutoCommit()) && (!isParcelado) ) {
                //Confirmar
                Object[] options = {"Sim", "Não"};
                int sd = JOptionPane.showOptionDialog(null, "A transação NÃO foi concluída, deseja realmente descartar as alterações ?", "Confirmação!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if (sd == 0) {
                    this.dispose();
                }
            }else{
                this.dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(jFParcelas.class.getName()).log(Level.SEVERE, null, ex);

    }
    }//GEN-LAST:event_formWindowClosing

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFParcelas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizaCentroCusto;
    private javax.swing.JButton atualizaClienteResponsaveljButton;
    private javax.swing.JButton atualizaContasjButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cadastraCentroCustojButton;
    private javax.swing.JButton cadastraContasjButton;
    private javax.swing.JButton cadastraPessoajButton;
    private javax.swing.JComboBox centroCustojComboBox;
    private javax.swing.JComboBox clienteResponsaveljComboBox;
    private javax.swing.JComboBox contajComboBox;
    private javax.swing.JFormattedTextField dataPagamentojFormattedTextField;
    private javax.swing.JLabel dataPagamentojLabel;
    private javax.swing.JFormattedTextField dataPrimeiroVencimentojFormattedTextField;
    private javax.swing.JRadioButton fornecedoresjRadioButton;
    private javax.swing.JButton gerarContasAPagarjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable parcelaGradejTable;
    private javax.swing.JRadioButton pessoasjRadioButton;
    private javax.swing.JSpinner quantidadejSpinner;
    private javax.swing.JCheckBox quitarAposGerarjCheckBox;
    private javax.swing.JButton sairjButton;
    private javax.swing.JComboBox situaçãojComboBox;
    private javax.swing.JFormattedTextField valorCadaParcelajFormattedTextField;
    private javax.swing.JFormattedTextField valorDocjFormattedTextField;
    // End of variables declaration//GEN-END:variables

}
