/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jFContas.java
 *
 * Created on 10/08/2014, 00:31:46
 */

package personalfinance;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import personalfinance.classes.ClassConecta;
import personalfinance.classes.ColorRenderer;
import personalfinance.classes.ComboItem;
import personalfinance.classes.Contas;
import personalfinance.classes.Funcoes;
import personalfinance.classes.Historicos;
import personalfinance.classes.Pessoas;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFContas extends javax.swing.JDialog {

    /** Creates new form jFContas */
    public jFContas() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeContasjTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigoContasjSpinner = new javax.swing.JSpinner();
        pessoasjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nomeContajTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bancojTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        agenciajSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        digitoAgenciajTextField = new javax.swing.JTextField();
        numeroContajSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        digitoContajTextField = new javax.swing.JTextField();
        numeroBancojTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cadastraPessoajButton = new javax.swing.JButton();
        atualizaPessoajButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(personalfinance.PersonalFinanceApp.class).getContext().getResourceMap(jFContas.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        buscarjButton.setBackground(resourceMap.getColor("buscarjButton.background")); // NOI18N
        buscarjButton.setIcon(resourceMap.getIcon("buscarjButton.icon")); // NOI18N
        buscarjButton.setText(resourceMap.getString("buscarjButton.text")); // NOI18N
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setName("buscarjButton"); // NOI18N
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setBackground(resourceMap.getColor("novojButton.background")); // NOI18N
        novojButton.setIcon(resourceMap.getIcon("novojButton.icon")); // NOI18N
        novojButton.setText(resourceMap.getString("novojButton.text")); // NOI18N
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setName("novojButton"); // NOI18N
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setBackground(resourceMap.getColor("editarjButton.background")); // NOI18N
        editarjButton.setIcon(resourceMap.getIcon("editarjButton.icon")); // NOI18N
        editarjButton.setText(resourceMap.getString("editarjButton.text")); // NOI18N
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setName("editarjButton"); // NOI18N
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setBackground(resourceMap.getColor("salvarjButton.background")); // NOI18N
        salvarjButton.setIcon(resourceMap.getIcon("salvarjButton.icon")); // NOI18N
        salvarjButton.setText(resourceMap.getString("salvarjButton.text")); // NOI18N
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setName("salvarjButton"); // NOI18N
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setBackground(resourceMap.getColor("salvarMaisjButton.background")); // NOI18N
        salvarMaisjButton.setIcon(resourceMap.getIcon("salvarMaisjButton.icon")); // NOI18N
        salvarMaisjButton.setText(resourceMap.getString("salvarMaisjButton.text")); // NOI18N
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setName("salvarMaisjButton"); // NOI18N
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        alterarjButton.setBackground(resourceMap.getColor("alterarjButton.background")); // NOI18N
        alterarjButton.setIcon(resourceMap.getIcon("alterarjButton.icon")); // NOI18N
        alterarjButton.setText(resourceMap.getString("alterarjButton.text")); // NOI18N
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setName("alterarjButton"); // NOI18N
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setBackground(resourceMap.getColor("excluirjButton.background")); // NOI18N
        excluirjButton.setIcon(resourceMap.getIcon("excluirjButton.icon")); // NOI18N
        excluirjButton.setText(resourceMap.getString("excluirjButton.text")); // NOI18N
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setName("excluirjButton"); // NOI18N
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jToolBar1.add(jSeparator2);

        sairjButton.setBackground(resourceMap.getColor("sairjButton.background")); // NOI18N
        sairjButton.setIcon(resourceMap.getIcon("sairjButton.icon")); // NOI18N
        sairjButton.setText(resourceMap.getString("sairjButton.text")); // NOI18N
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setName("sairjButton"); // NOI18N
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        gradeContasjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome da conta", "Banco", "Agência", "Conta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeContasjTable.setName("gradeContasjTable"); // NOI18N
        gradeContasjTable.setSelectionForeground(resourceMap.getColor("gradeContasjTable.selectionForeground")); // NOI18N
        gradeContasjTable.getTableHeader().setReorderingAllowed(false);
        gradeContasjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeContasjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeContasjTable);
        gradeContasjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeContasjTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        gradeContasjTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gradeContasjTable.columnModel.title0")); // NOI18N
        gradeContasjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeContasjTable.getColumnModel().getColumn(1).setPreferredWidth(160);
        gradeContasjTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gradeContasjTable.columnModel.title1")); // NOI18N
        gradeContasjTable.getColumnModel().getColumn(2).setResizable(false);
        gradeContasjTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        gradeContasjTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gradeContasjTable.columnModel.title2")); // NOI18N
        gradeContasjTable.getColumnModel().getColumn(3).setResizable(false);
        gradeContasjTable.getColumnModel().getColumn(3).setPreferredWidth(80);
        gradeContasjTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("gradeContasjTable.columnModel.title3")); // NOI18N
        gradeContasjTable.getColumnModel().getColumn(4).setResizable(false);
        gradeContasjTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        gradeContasjTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("gradeContasjTable.columnModel.title4")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jTabbedPane1.setForeground(resourceMap.getColor("jTabbedPane1.foreground")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel4.setBackground(resourceMap.getColor("jPanel4.background")); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        codigoContasjSpinner.setName("codigoContasjSpinner"); // NOI18N

        pessoasjComboBox.setName("pessoasjComboBox"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        nomeContajTextField.setText(resourceMap.getString("nomeContajTextField.text")); // NOI18N
        nomeContajTextField.setName("nomeContajTextField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        bancojTextField.setText(resourceMap.getString("bancojTextField.text")); // NOI18N
        bancojTextField.setName("bancojTextField"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        agenciajSpinner.setName("agenciajSpinner"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        digitoAgenciajTextField.setText(resourceMap.getString("digitoAgenciajTextField.text")); // NOI18N
        digitoAgenciajTextField.setName("digitoAgenciajTextField"); // NOI18N

        numeroContajSpinner.setName("numeroContajSpinner"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        digitoContajTextField.setText(resourceMap.getString("digitoContajTextField.text")); // NOI18N
        digitoContajTextField.setName("digitoContajTextField"); // NOI18N

        numeroBancojTextField.setText(resourceMap.getString("numeroBancojTextField.text")); // NOI18N
        numeroBancojTextField.setName("numeroBancojTextField"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        cadastraPessoajButton.setIcon(resourceMap.getIcon("cadastraPessoajButton.icon")); // NOI18N
        cadastraPessoajButton.setText(resourceMap.getString("cadastraPessoajButton.text")); // NOI18N
        cadastraPessoajButton.setContentAreaFilled(false);
        cadastraPessoajButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraPessoajButton.setName("cadastraPessoajButton"); // NOI18N
        cadastraPessoajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraPessoajButtonActionPerformed(evt);
            }
        });

        atualizaPessoajButton.setIcon(resourceMap.getIcon("atualizaPessoajButton.icon")); // NOI18N
        atualizaPessoajButton.setText(resourceMap.getString("atualizaPessoajButton.text")); // NOI18N
        atualizaPessoajButton.setContentAreaFilled(false);
        atualizaPessoajButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaPessoajButton.setName("atualizaPessoajButton"); // NOI18N
        atualizaPessoajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaPessoajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(agenciajSpinner, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(codigoContasjSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(pessoasjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cadastraPessoajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(digitoAgenciajTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(61, 61, 61)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(numeroContajSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addGap(2, 2, 2)
                .addComponent(atualizaPessoajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(nomeContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bancojTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(digitoContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numeroBancojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(atualizaPessoajButton)
                    .addComponent(cadastraPessoajButton)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoContasjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pessoasjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomeContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bancojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agenciajSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(digitoAgenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeroContajSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(digitoContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeroBancojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        observacaojTextArea.setName("observacaojTextArea"); // NOI18N
        jScrollPane2.setViewportView(observacaojTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    //***************************** DADOS DO USUARIO LOGADO
    int cod_acesso_usuario;
    String contas_usuario_logado;
    //*****************************

    ComboItem combo_pessoa;
    int cod_conta;


    public void getGrandeContas() throws ParseException{
       //Consultar Contas
        Contas oConta = new Contas();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome conta", "Banco", "Agência", "Conta"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeContasjTable.setModel(modeloTabela);
        gradeContasjTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        gradeContasjTable.getColumnModel().getColumn(1).setPreferredWidth(160);
        gradeContasjTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        gradeContasjTable.getColumnModel().getColumn(3).setPreferredWidth(80);
        gradeContasjTable.getColumnModel().getColumn(4).setPreferredWidth(100);

        gradeContasjTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA


try {
            resultSet = oConta.getConsultar();

            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Contas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_CONTAS")),
                    resultSet.getString("NOME_CONTA"),
                    resultSet.getString("BANCO"),
                    resultSet.getString("AGENCIA") + "-" + resultSet.getString("DIGITO_AGENCIA"),
                    resultSet.getString("NUMERO_CONTA") + "-"+ resultSet.getString("DIGITO_CONTA"),

                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Contas.class.getName()).log(Level.SEVERE, null, ex);
        }

           }// FIM DA GRADE

    public void getFieldContas(int cod_conta) throws ParseException{

        Contas oConta = new Contas();
        ResultSet rs = null;
        oConta.setCod_conta(cod_conta);

        try {
            rs = oConta.getConsultar();
            rs.next();

            ComboItem oItem = new ComboItem(rs.getInt("COD_PESSOA"), rs.getString("PESSOA"));
            pessoasjComboBox.setSelectedItem(oItem);

            //Pegar campos
            pessoasjComboBox.setSelectedItem(rs.getString("PESSOA"));
            nomeContajTextField.setText(rs.getString("NOME_CONTA"));
            bancojTextField.setText(rs.getString("BANCO"));
            agenciajSpinner.setValue(rs.getInt("AGENCIA"));
            digitoAgenciajTextField.setText(rs.getString("DIGITO_AGENCIA"));
            numeroContajSpinner.setValue(rs.getInt("NUMERO_CONTA"));
            digitoContajTextField.setText(rs.getString("DIGITO_CONTA"));
            numeroBancojTextField.setText(rs.getString("NUMERO_BANCO"));
            observacaojTextArea.setText(rs.getString("OBSERVACAO"));

        } catch (SQLException ex) {
            Logger.getLogger(Contas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        pessoasjComboBox.grabFocus();

        ClassConecta.conecta();

        atualizaPessoajButtonActionPerformed(null);

        try {
            getGrandeContas();
        } catch (ParseException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        pessoasjComboBox.grabFocus();

        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }

        atualizaPessoajButtonActionPerformed(evt);
        nomeContajTextField.setText("");
        bancojTextField.setText("");
        agenciajSpinner.setValue(0);
        digitoAgenciajTextField.setText("");
        numeroContajSpinner.setValue(0);
        digitoContajTextField.setText("");
        numeroBancojTextField.setText("");
        observacaojTextArea.setText("");
    }//GEN-LAST:event_novojButtonActionPerformed

    private void atualizaPessoajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaPessoajButtonActionPerformed
        // TODO add your handling code here:
        try {
            Pessoas oPessoa = new Pessoas();
            ResultSet rs = null;
            rs = oPessoa.getConsultar();
            pessoasjComboBox.removeAllItems();
            while (rs.next()) {
                pessoasjComboBox.addItem(new ComboItem(rs.getInt(1), rs.getString(2)));
            }
            pessoasjComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaPessoajButtonActionPerformed

    private void cadastraPessoajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraPessoajButtonActionPerformed
        // TODO add your handling code here:
        jFPessoas oFormPessoas = new jFPessoas();

        oFormPessoas.conecta = conecta;

        oFormPessoas.cod_acesso_usuario = cod_acesso_usuario;
        oFormPessoas.pessoas_usuario_logado = contas_usuario_logado;
        oFormPessoas.setTitle("Cadastro Pessoas");
        oFormPessoas.pack();
        oFormPessoas.setLocationRelativeTo(null);
        oFormPessoas.setModal(true);
        oFormPessoas.setVisible(true);
    }//GEN-LAST:event_cadastraPessoajButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Contas oConta = new Contas();
        
        combo_pessoa = (ComboItem) pessoasjComboBox.getSelectedItem();

        if (pessoasjComboBox.getSelectedItem().equals("")){

           JOptionPane.showMessageDialog(null, "O campo PESSOA é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            novojButtonActionPerformed(evt);
        }else{
            if(nomeContajTextField.getText().equals("")){

                JOptionPane.showMessageDialog(null, "O campo NOME DA CONTA é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
                novojButtonActionPerformed(evt);
            }else{

                oConta.setCod_pessoa(combo_pessoa.getId());
                oConta.setNome_conta(nomeContajTextField.getText().trim().toUpperCase());
                oConta.setBanco(bancojTextField.getText().trim().toUpperCase());
                oConta.setAgencia((Integer) agenciajSpinner.getValue());
                oConta.setDigito_agencia(digitoAgenciajTextField.getText().trim().toUpperCase());
                oConta.setNumero_conta((Integer) numeroContajSpinner.getValue());
                oConta.setDigito_conta(digitoContajTextField.getText().trim().toUpperCase());
                oConta.setNumero_banco(numeroBancojTextField.getText().trim().toUpperCase());
                oConta.setObservacao(observacaojTextArea.getText().trim().toUpperCase());
                oConta.setCadastrar();

                try {
                    ClassConecta.con.commit();
                    ClassConecta.con.setAutoCommit(true);
                } catch (SQLException ex) {
                    Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Problemas ao cadastrar conta: " +  ex.getMessage());
                }

                // *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_acesso_usuario);
                oHistorico.setHistorico("CADASTRO DE CONTAS "
                        + "\n"+ nomeContajTextField.getText()
                        + "\n" + bancojTextField.getText()
                        + "\n"
                        + "CADASTRO EM "+ data1 + " " + hora1);
                oHistorico.setPessoa(contas_usuario_logado);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("CADASTRO NO SISTEMA");
                oHistorico.setCadastrar();

                try{

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
                try {
                    getGrandeContas();
                } catch (ParseException ex) {
                    Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//FIM DO ELSE DO VERIFICA CAMPOS VAZIOS - NOMECONTA
        }//FIM DO ELSE DO VERIFICA CAMPOS VAZIOS - PESSOASCOMBOBOX

    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGrandeContas();
        } catch (ParseException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void gradeContasjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeContasjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
            cod_conta = Integer.parseInt(gradeContasjTable.getValueAt(gradeContasjTable.getSelectedRow(), 0).toString());
            if (cod_conta == 0) {
                return;
            }
        try {
            getFieldContas(cod_conta);
        } catch (ParseException ex) {
            Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeContasjTableMouseClicked

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(evt);
        novojButtonActionPerformed(evt);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);

        Contas oConta = new Contas();

        combo_pessoa = (ComboItem) pessoasjComboBox.getSelectedItem();

        if (pessoasjComboBox.getSelectedItem().equals("")){

           JOptionPane.showMessageDialog(null, "O campo PESSOA é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            novojButtonActionPerformed(evt);
        }else{
            if(nomeContajTextField.getText().equals("")){

                JOptionPane.showMessageDialog(null, "O campo NOME DA CONTA é obrigatório", "ATENÇÃO Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
                novojButtonActionPerformed(evt);
            }else{

                oConta.setCod_conta(cod_conta);
                oConta.setCod_pessoa(combo_pessoa.getId());
                oConta.setNome_conta(nomeContajTextField.getText().trim().toUpperCase());
                oConta.setBanco(bancojTextField.getText().trim().toUpperCase());
                oConta.setAgencia((Integer) agenciajSpinner.getValue());
                oConta.setDigito_agencia(digitoAgenciajTextField.getText().trim().toUpperCase());
                oConta.setNumero_conta((Integer) numeroContajSpinner.getValue());
                oConta.setDigito_conta(digitoContajTextField.getText().trim().toUpperCase());
                oConta.setNumero_banco(numeroBancojTextField.getText().trim().toUpperCase());
                oConta.setObservacao(observacaojTextArea.getText().trim().toUpperCase());
                oConta.setAlterar(conecta);

                try {
                    ClassConecta.con.commit();
                    ClassConecta.con.setAutoCommit(true);
                } catch (SQLException ex) {
                    Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Problemas ao cadastrar conta: " +  ex.getMessage());
                }

                // *******************INCLUINDO DADOS NO HISTORICO*******************************************************
                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_acesso_usuario);
                oHistorico.setHistorico("ATUALIZAÇÃO DE DADOS CADASTRAIS - CONTAS "
                        + "\n"+ nomeContajTextField.getText()
                        + "\n" + bancojTextField.getText()
                        + "\n"
                        + "ATUALIZADO EM: "+ data1 + " " + hora1);
                oHistorico.setPessoa(contas_usuario_logado);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("ATUALIZAÇÃO DE CONTA");
                oHistorico.setCadastrar();

                try{

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
                try {
                    getGrandeContas();
                } catch (ParseException ex) {
                    Logger.getLogger(jFContas.class.getName()).log(Level.SEVERE, null, ex);
                }

            }//FIM DO ELSE DO VERIFICA CAMPOS VAZIOS - NOMECONTA
        }//FIM DO ELSE DO VERIFICA CAMPOS VAZIOS - PESSOASCOMBOBOX

    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);

        int codContaDelete = 0;
        codContaDelete = Integer.parseInt(gradeContasjTable.getValueAt(gradeContasjTable.getSelectedRow(), 0).toString());

        Contas oConta = new Contas();
        oConta.setCod_conta(codContaDelete);
        oConta.setExcluir(conecta);
        try {
            ClassConecta.con.commit();
            ClassConecta.con.setAutoCommit(true);

// *******************INCLUINDO DADOS NO HISTORICO*******************************************************

                String data = "dd/MM/yyyy";
                String hora = "h:mm - a";
                String data1, hora1;

                java.util.Date agora = new java.util.Date();;
                SimpleDateFormat formata = new SimpleDateFormat(data);
                data1 = formata.format(agora);
                formata = new SimpleDateFormat(hora);
                hora1 = formata.format(agora);

                System.out.print(data1+" "+ hora1);

                Historicos oHistorico = new Historicos();

                oHistorico.setCod_pessoa(cod_acesso_usuario);
                oHistorico.setHistorico("EXCLUSÃO DE CONTA. "
                        + "\n informações excluídas:"
                        + "\n"+ "Nome Conta: " + nomeContajTextField.getText()
                        + "\n" + "Banco " + bancojTextField.getText()
                        + "\n" + " EXCLUÍDO EM: "+ data1 + " " + hora1);
                oHistorico.setPessoa(contas_usuario_logado);
                oHistorico.setData(data1 +" "+ hora1);
                oHistorico.setTipo_historico("EXCLUSÃO DE CONTA");
                oHistorico.setCadastrar();

                ClassConecta.con.commit();
                ClassConecta.con.setAutoCommit(true);

        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        atualizaPessoajButtonActionPerformed(evt);
        nomeContajTextField.setText("");
        bancojTextField.setText("");
        agenciajSpinner.setValue(0);
        digitoAgenciajTextField.setText("");
        numeroContajSpinner.setValue(0);
        digitoContajTextField.setText("");
        numeroBancojTextField.setText("");
        observacaojTextArea.setText("");
        try {
            getGrandeContas();
        } catch (ParseException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFContas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner agenciajSpinner;
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton atualizaPessoajButton;
    private javax.swing.JTextField bancojTextField;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastraPessoajButton;
    private javax.swing.JSpinner codigoContasjSpinner;
    private javax.swing.JTextField digitoAgenciajTextField;
    private javax.swing.JTextField digitoContajTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeContasjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField nomeContajTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField numeroBancojTextField;
    private javax.swing.JSpinner numeroContajSpinner;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JComboBox pessoasjComboBox;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    // End of variables declaration//GEN-END:variables

}
